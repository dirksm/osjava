<?xml version="1.0"?>

<reviews>

  <review isbn="1590592832">
   <p>This is the first book available on Jakarta Commons. Every released Commons component at time of print is covered and there are numerous examples. </p>
   <p>Note, I do have a certain level of self-interest in this as I was a technical reviewer on the book. </p>
   <p>After a brief introduction, the author, Harshad Oak, covers the Lang, Logging, Validator, BeanUtils, Pool/DBCP, Digester, Collections/Primitives, HttpClient/FileUpload and Net components, with a chapter on each and then finishes up with a quick overview of DbUtils, Codec, JXPath and Discovery in an ultimate chapter. </p>
   <p>There are other Jakarta Commons books on the way, and this book is ideal for the newbie to Jakarta Commons. I'll be ensuring my workplace has a copy. </p>
  </review>

  <review isbn="1590592557">
   <p>This is a bizarre book, the bane of a librarian everywhere with its coverage of Struts, ObjectRelationBridge, Lucene and Velocity. As if that wasn't enough, the contents page shows that it also covers other open source Java projects, namely, Ant, Anthill and XDoclet, along with concepts such as RSS and EJB. All to create an application called JavaEdge. All of this within 300 pages. </p>
   <p>Originally published by Wrox, the edition I've read is the reprint from Apress. I'm reading the book as someone who feels they know enough about Struts, but would like to pick up the other technologies the book covers, so my attention to the Struts part of the book is relatively glancing. </p>
   <p>The first chapter is equally bizarre, rather than launching into the open source tools in question, it leads the reader through a series of web anti-patterns that contribute to entropy. I wish they had defined what that term means to them with regards to a software project, I imagine many speakers of English around the world would not be too sure. I've taken it to be the increasing tendency of any project to turn into a complete and utter mess. </p>
   <p>This chapter erred badly on the first anti-pattern; describing <i>Concern Slush</i> as when a team have not separated the presentation, logic and data tiers adequately, and then suggests that MVC is the solution to this. It follows this anti-pattern with one on <i>Tier Leakage</i>, which just seems to be a repeat of the <i>Concern Slush</i> in the presence of a tiered system. The next anti-pattern describes <i>Validation Confusion</i>, but fails to discuss Struts' JavaScript validation variant. Chapter 3 also fails to discuss this when it digs into Struts validation. The chapter then ends with shorter sections on <i>Tight Skins</i> and <i>Data Madness</i>, neither of which stun. So all in all, a weak introduction that doesn't bode well for the book. </p>
   <p>Three Struts chapters are next, a Struts introduction, forms/validation and business logic. These are followed by an ObjectBridge chapter for the data-tier, Velocity for the front-end, Lucene for searching and Ant/Anthill for building. </p>
   <p>The Struts chapters stand out for me in what they lack, rather than what they have. There is no mention of client-side validation, no mention of Tiles and no mention of using XDoclet. All three of these are pretty key concepts for me in Struts and are examples of the general problem with the book if you're looking for any kind of depth. </p>
   <p>ObjectBridge is on my "Why is there not a book on this yet?" list. Hibernate is all the rage, and yet ObjectBridge is older (more mature), standards appliable (JDO) and has a nicer licence. I've heard it say that while Hibernate is easier, ObjectBridge is more powerful and once you get over the curve you'll not look back. Personally I think ObjectBridge got unlucky; Hibernate got popular while ObjectBridge was migrating into Apache and lacking the agility to respond. It shows how delicate communities are. </p>
   <p>Diatribe aside, the ObjectBridge chapter is 10 pages of introduction to DAOs, Value Objects and O/R Mapping, and 30 pages on ObjectBridge. Despite a pretty dry feel, it does a good job of covering the basics. In fact, if you pick this book up at a store, read P.170 through to P.184 and you'll have read the most valuable part of the book, a description of the ObjectBridge repository.xml configuration file. Note: The chapter was written against 0.9.7, while the latest is 1.0.1. An Amazon review suggests this makes the chapter obsolete, but I can't see any obvious differences between the examples in the chapter and on the ObjectBridge website. </p>
   <p>With the Velocity chapter, I'm back to being underimpressed. It doesn't help that I'm also reading Apress' Pro Velocity at the moment and so this seems to be a very sparse introduction to Velocity and VTL. Following this introduction, it then briefly discusses ways in which you may plug Velocity into a web-application and to create RSS, but I really felt that by this point the author was treading water. </p>
   <p>The Lucene chapter is probably my favourite in the book, or at least the first half is. It clearly explains how Lucene works with some nice diagrams and a nice style. Sadly it descends in the latter half into lots of code listing, sometimes whole files and sometimes a handful of lines at a time with detailed explanations. This is a complaint of mine concerning the Wrox style of printing, their listings are dull gray blobs of text with little interplay with the text surrounding them. There is no use of bold-font to show focus, or numbered sidenotes to link to explanations in the text. </p>
   <p>The last chapter, on Ant and Anthill, is most likely written by the third listed author, Maciej Zawadzki who also happens to be one of the authors of Anthill. It's a very quick run through all of the essentials for a build script, with reports and nightly builds. A short chapter, but useful knowledge. This is also the only chapter to mention XDoclet; for the generation of TODO lists. </p>
   <hr/>
   <ul>
     <li>On the plus side, the book provides a great introduction to the technologies needed for an end-to-end webapp for the real world. It's also the only thing out there on ObjectBridge, and has a good description of Lucene. </li>
     <li>On the minus side, Lucene, Velocity, Struts and Ant all have books with greater focus. As with many Wrox books, the multiple author approach tends to lead to a less cohesive book and the editing seems quite lax. My feel is that mistakes are too easy to find, and I especially loved seeing the number of permutations possible for the words Jakarta, Apache and Group. </li>
   </ul>
   <p><strong>So in conclusion, if you're new to webapps, this is solid walk through of an open-source based solution, if the book is sitting in your office, read the ObjectBridge chapter and the first half of the Lucene chapter. Otherwise? I'd skip it. </strong></p>
   <p><strong>Interesting tidbit</strong>: There are 34 names in the 'credits' at the front of the book, which doesn't include the authors, or the people the authors are thanking. </p>
   <p><strong>Suggested retitle</strong>: Building a Web Application with Open-Source. </p>
  </review>

  <review isbn="0596003870">
   <p>Subtitled "Extreme Programming in the Real World", this cookbook makes a good introduction to a slew of open-source projects that are of use both by the Extreme Programming (XP) brigade, and by any other Java project. Whilst chapter one introduces us to the real subject of the book, XP Tools, the second chapter is a tiny introduction to XP and largely ignorable. Following from there the book enters the cookbook mode and has chapters on Ant, JUnit, HttpUnit, Mock Objects, Cactus, JUnitPerf and XDoclet. It finishes with a chapter on Tomcat and JBoss which is really a very basic introduction to their administration. </p>
   <p>The Perl Cookbook was an outstanding book. One of the best of the last decade, and since then O'Reilly have continually tried to recreate that quality with various releases in the Cookbook series. I'm not aware of any book which has managed to match it, but there's been nothing to match the classic Programming Perl and Learning Perl combination either. Anyone who has bought the Java Cookbook will be aware of how hit and miss the Cookbook series is. What makes the Perl Cookbook so good is that it is a subject that many of us do a little bit of the time. Therefore when I hit my head for the Nth time and try to recall how you do substrings in Perl, it's just a recipe away. This is not something I would say of this book. </p>
   <p>While the chapters do have recipes, they don't assume familiarity with the subjects in question and so the first 3 or 4 recipes are wasted on how to setup and start using the subject matter. If I'm a user of JUnit already, or have read a good article, I already know the first 5 recipes just to have a working system. There are on average 13 recipes per chapter, and with 4 of these being startup, that's a lot of the book wasted. </p>
   <p>The last chapter is especially weak when it comes to the Cookbook style. Although it's lined up as a series of recipes, it's really just a list of ways to deploy in Tomcat, and a couple of pages on JBoss. </p>
   <p>Despite this diatribe of negativity concerning its quality as a Cookbook, the book's content is actually very good. It rarely turns into reams of code (there's one bad part in the Tomcat section) and as an O'Reilly book has the nice type-setting for the code it does have, with bold text to signify the part of the code to focus on. The recipe structure helps to keep the book evenly structured and the Problem/Solution/Discussion/See Also breakdown of an O'Reilly recipe keeps the concept within understanding; much like a Gang of Four pattern. </p>
   <p>All in all, I'd recommend this book as a good primer to the technologies listed. Buy it to read on the train, or on holiday, don't buy it to be an essential desk-side reference. </p>
   <p><strong>Suggested retitle</strong>: Managing Java Code with Open-Source tools. </p>
   <p><strong>Competition</strong>: <a href="book-047120708X.html">Java Tools for eXtreme Programming</a>. I'd rate this as the better read. </p>
  </review>

</reviews>
