<?xml version="1.0"?>
<document>

  <properties>
      <author email="david@petersheim.com">David Petersheim</author>
      <title>Tutorial</title>
  </properties>

  <body>
<section name="Charlotte  A Bit Based Packet manipulation utility">
  <p>Charlotte is a tool for manipulating Bit Based Packet (BBP). 
     A BBP is a single series of bits representing multiple values.
     For example, a TCP header has the following form. </p>


  <p>The total number of bits in the above definition is 160 bytes.</p>

<p>A charlotte encoding description for a TCP Header would look like this:</p> 

<code>
name: TCP Header<br/>
version=4<br/>
headerLength=4<br/>
typeOfService=8<br/>
totalLength=16<br/>
id=16<br/>
flags=3<br/>
fragmentOffset=13<br/>
timeToLive=8<br/>
protocol=8<br/>
headerChecksum=16<br/>
sourceIp=32<br/>
destinationIp=32
</code>

<p>It would then be used like this:</p>

<code>
import code316.charlotte.Encoding;<br/>
import code316.charlotte.EncodingUtil;<br/>
import code316.charlotte.Parser;<br/>
<br/>
public class Test {<br/>
<br/>
    private static final Encoding TCP_ENCODING;<br/>
    private static final String TCP_ENCODING_FILE = "encoding-definitions/tcp-encoding.enc";<br/>
    static {<br/>
        try {<br/>
            Parser ep = new Parser();<br/>
            InputStream in =<br/>
                Test.class.getClassLoader().getResourceAsStream(TCP_ENCODING_FILE);<br/>
<br/>
            if ( in == null ) {<br/>
                throw new IllegalStateException("could not load tcp encoding file: " + TCP_ENCODING_FILE);<br/>
            }<br/>
            TCP_ENCODING = ep.parse(in);<br/>
        }<br/>
        catch (IOException ioe) {<br/>
            throw new RuntimeException("Could not create encoding", ioe);<br/>
        }<br/>
    }<br/>
<br/>
    public static TcpValue decodeTcpValue(BigInteger bits) {<br/>
        // contains a Map of String to Double<br/>
        Map valueMap = EncodingUtil.expandFields(TCP_ENCODING, bits);<br/>
        TcpValue tcp = new TcpValue();<br/>
        tcp.setVersion( valueMap.get("version") );<br/>
        ....<br/>
</code>

</section>
</body>
</document>
