<?xml version="1.0"?>
<project>
  
  <pomVersion>3</pomVersion>
  <id>scraping-engine</id>
  <name>scraping-engine</name>
  <currentVersion>0.1</currentVersion>
  <organization>
    <name>OSJava</name>
    <url>http://www.osjava.org/</url>
    <logo>/images/osjava.gif</logo>
  </organization>
  <inceptionYear>2003</inceptionYear>
  <package>com.generationjava.jndi</package>
  <logo>/images/1x1.gif</logo>
  
  <!-- Gump integration -->
  <gumpRepositoryId>scraping-engine</gumpRepositoryId>

  <description>
    A simple implementation of JNDI. It is entirely library based, so no server instances are started, and it sits upon Java .properties files, so it is easy to use and simple to understand. The .properties files may be either on the file system or in the classpath. 
  </description>
  
  <shortDescription>A JNDI implementation using .properties</shortDescription>

  <url>http://www.generationjava.com/</url>
  <!--
  <issueTrackingUrl>http://nagoya.apache.org/scarab/servlet/scarab/</issueTrackingUrl>
  -->
  <siteAddress>www.generationjava.com/maven/scraping-engine</siteAddress>
  <siteDirectory>/sites/com/generationjava/www/maven/genjava/scraping-engine/</siteDirectory>
  <distributionDirectory>/sites/com/generationjava/www/maven/builds/</distributionDirectory>

  <repository>
    <connection>scm:cvshen@umbongo.flamefew.net:/var/cvs:scraping-engine</connection>
    <url>http://www.generationjava.com/view-cvs/viewcvs.cgi/scraping-engine/</url>
  </repository>

  <versions>
    <version>
      <id>1.0</id>
      <name>1.0</name>
      <tag>HEAD</tag>
    </version>
  </versions>

  <branches>
  </branches>

  <!--
  <mailingLists>
    <mailingList>
    </mailingList>
  </mailingLists>
  -->

  <developers>

    <developer>
      <name>Henri Yandell</name>
      <id>hen</id>
      <email>bayard@generationjava.com</email>
      <organization>GenerationJava</organization>
      <roles>
        <role>Java Developer</role>
      </roles>
    </developer>

  </developers>

  <contributors>
  </contributors>
  
  <!-- Need to mark these as compile-time/run-time -->

  <dependencies>
    <dependency>
      <id>log4j</id>
      <version>1.2.7</version>
      <url>http://jakarta.apache.org/log4j/</url>
    </dependency>
    <dependency>
      <id>commons-lang</id>
      <version>1.0</version>
      <url>http://jakarta.apache.org/commons/lang.html</url>
    </dependency>
    <dependency>
      <id>commons-httpclient</id>
      <version>2.0-alpha2</version>
      <url>http://jakarta.apache.org/commons/</url>
    </dependency>
    <dependency>
      <id>commons-collections</id>
      <version>2.1</version>
      <url>http://jakarta.apache.org/commons/</url>
    </dependency>
    <dependency>
      <id>commons-dbutils</id>
      <version>SNAPSHOT</version>
      <url>http://jakarta.apache.org/commons/</url>
    </dependency>
    <dependency>
      <id>genjava-core</id>
      <version>2.0</version>
      <url>http://www.generationjava.com/</url>
    </dependency>
    <dependency>
      <id>simple-jndi</id>
      <version>0.5</version>
      <url>http://www.generationjava.com/</url>
    </dependency>
    <dependency>
      <id>quartz</id>
      <version>1.0.7</version>
      <url>http://www.part.net/quartz.html</url>
    </dependency>
  </dependencies>

  <build>

    <nagEmailAddress>bayard@www.generationjava.com</nagEmailAddress>

    <sourceDirectory>src/java</sourceDirectory>

    <unitTestSourceDirectory>src/test</unitTestSourceDirectory>
    <!--

    <integrationUnitTestSourceDirectory/>

    <aspectSourceDirectory></aspectSourceDirectory>

    <unitTestPatterns>
      <unitTestPattern>include = **/*Test.java</unitTestPattern>
    </unitTestPatterns>

    <integrationUnitTestPatterns>
    </integrationUnitTestPatterns>
    -->

    <!-- J A R  R E S O U R C E S -->
    <!-- Resources that are packaged up inside the JAR file -->

    <jarResources>
        <jarResource>include = *.dtd</jarResource>
        <jarResource>include = log4j.properties</jarResource>
    </jarResources>

    <jars>
    </jars>
  </build>
</project>

