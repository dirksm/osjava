<?xml version="1.0"?>
<document>

  <properties>
      <author email="pete@fingertipsoft.com">Peter A. Cassetta</author>
      <author email="bayard@generationjava.com">Henri Yandell</author>
      <title>Benchmarks</title>
  </properties>

  <body>
    <section name="Benchmarks between XmlWriter and competitors">

<ul>
<li>All times are in milliseconds.</li>
<li>"***" means an out of memory exception was generated.</li>
<li>See notes below for further details.</li>
</ul>

<table>
<tr>
<th>Records Written</th>
<th>XmlWriter 1.0</th>
<th>J2EE 1.3</th>
<th>JDOM 1.0 Beta 8</th>
<th>NanoXML/Lite 2.2.1</th>
<th>ECS 1.4.1</th>
</tr>


<tr><td>5,000</td><td>491</td><td>1,262</td><td>1,473</td><td>1,822</td><td>81,017</td></tr>
<tr><td>10,000</td><td>821</td><td>2,103</td><td>2,434</td><td>3,345</td><td>350,805</td></tr>
<tr><td>15,000</td><td>1,051</td><td>3,715</td><td>3,144</td><td>***</td><td>***</td></tr>
<tr><td>20,000</td><td>1,442</td><td>3,886</td><td>4,416</td></tr>
<tr><td>25,000</td><td>1,642</td><td>6,339</td><td>6,059</td></tr>
<tr><td>30,000</td><td>1,853</td><td>***</td><td>***</td></tr>
<tr><td>35,000</td><td>2,063</td></tr>
<tr><td>40,000</td><td>2,654</td></tr>
<tr><td>45,000</td><td>2,854</td></tr>
<tr><td>50,000</td><td>3,044</td></tr>
<tr><td>55,000</td><td>3,245</td></tr>
<tr><td>60,000</td><td>3,445</td></tr>
<tr><td>65,000</td><td>3,645</td></tr>
<tr><td>70,000</td><td>3,846</td></tr>
<tr><td>75,000</td><td>4,026</td></tr>
<tr><td>80,000</td><td>***</td></tr>

</table>

</section>

<section name="Notes">

<ol>
<li>All benchmarks were run on a 1.2 GHz Athlon with 512 MB of
memory, under Windows XP. No other apps were running, though
there are always drivers, a desktop, etc. running in Windows.</li>

<li>Benchmarks were run 3 times, and the fastest score recorded.
There wasn't much variation between runs anyway, but the fastest
score seems best since this probably has the least background
noise from multitasking, etc.</li>

<li>The benchmark test writes multiple copies of a short XML
fragment to a StringWriter. By using a StringWriter, an out of
memory exception is guaranteed when the number of records gets
sufficiently large. So this benchmark gauges memory efficiency
as well as speed.</li>

<li>"Pretty printing" was enabled for all benchmarks. However,
only XmlWriter and JDOM implement pretty printing in a
meaningful way. The other libraries insert far less white space,
skewing results in their favor.</li>

<li>The benchmark writes an XML document of the following form: <br />

<code>
&lt;?xml version="1.0" encoding="UTF-8"?&gt; <br />
&lt;object_list&gt; <br />
  &lt;!-- Object number 1 --&gt; <br />
  &lt;object number="1"&gt; <br />
    &lt;attribute_only attr="value"/&gt; <br />
    &lt;nested1 nesting_level="1"&gt; <br />
      &lt;nested2 nesting_level="2"&gt;Some text&lt;/nested2&gt; <br />
    &lt;/nested1&gt; <br />
    &lt;more_text&gt;Some more text&lt;/more_text&gt; <br />
  &lt;/object&gt; <br />
  &lt;!-- Object number 2 --&gt; <br />
  ... <br />
&lt;/object_list&gt; <br />
</code>
</li>
</ol>

</section>

<section name="References">
<p>
The products referenced here can be obtained from:

<table>
<tr><td>XmlWriter</td><td><a href="http://xmlwriter.sourceforge.net/">http://xmlwriter.sourceforge.net/</a></td></tr>
<tr><td>J2EE</td><td><a href="http://java.sun.com/j2ee/">http://java.sun.com/j2ee/</a></td></tr>
<tr><td>JDOM</td><td><a href="http://www.jdom/org">http://www.jdom/org</a></td></tr>
<tr><td>NanoXML</td><td><a href="http://web.wanadoo.be/cyberelf/nanoxml/">http://web.wanadoo.be/cyberelf/nanoxml/</a></td></tr>
<tr><td>ECS</td><td><a href="http://jakarta.apache.org/ecs/index.html">http://jakarta.apache.org/ecs/index.html</a></td></tr>
</table>
</p>
</section>

<section name="Source code">
<p>Available from <a href="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/xmlwriter/benchmarks/">cvs</a>.</p>
</section>

<section name="Todo">
<p>We need to benchmark outputting with SAX [probably fast but very very ugly] 
and to compare against <a href="http://www.sourceforge.net/projects/xmlenc">Xml-enc</a>. Xmlenc will be faster but has less features.</p>
</section>
</body>
</document>
