We have a top level interface.

This interface is either the same as XmlStream from Ernst's, or it is a semantic
equivalent of this. XmlWriter being a nicer version of XmlStream. This makes a lot of sense.

Then we have:

PrettyPrintingXmlWriter
SchemaCheckingXmlWriter
EmptyElementXmlWriter's
SimpleXmlWriter = the old one. 
XmlStreamXmlWriter = the newer one.

These would all implement the XmlWriter interface and would be chainable, 
as is much of the Java IO.

A factory system would be in place:

XmlIOFactory.withPrettyPrinting(XmlWriter)
XmlIOFactory.withEmptyElementTactics(XmlWriter)
XmlIOFactory.withSchemaChecking(XmlWriter)
XmlIOFactory.usingXmlStream(Writer|Stream, Encoding[String])
XmlIOFactory.usingSimpleWriter(Writer)

